{"version":3,"sources":["js/team-create.js","index.js"],"names":["members","name","lastname","photo","renderedTeam","markup","map","member","join","console","log","teamMemberSelector","document","querySelector","insertAdjacentHTML"],"mappings":";;;AA2EC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAAA,QAAA,aAAA,EA3EM,MAAMA,EAAU,CACnB,CACAC,KAAM,SACNC,SAAU,WACVC,MAAO,WAEP,CACAF,KAAM,SACNC,SAAU,SACVC,MAAO,WAEP,CACAF,KAAM,QACNC,SAAU,WACVC,MAAO,WAEP,CACAF,KAAM,QACNC,SAAU,WACVC,MAAO,WAEP,CACAF,KAAM,WACNC,SAAU,UACVC,MAAO,WAEP,CACAF,KAAM,SACNC,SAAU,YACVC,MAAO,WAEP,CACAF,KAAM,UACNC,SAAU,SACVC,MAAO,WAEP,CACAF,KAAM,UACNC,SAAU,WACVC,MAAO,WAEP,CACAF,KAAM,aACNC,SAAU,SACVC,MAAO,cAEP,CACAF,KAAM,SACNC,SAAU,YACVC,MAAO,cAEP,CACAF,KAAM,SACNC,SAAU,UACVC,MAAO,eAII,SAASC,EAAaJ,GAEjCK,IAAAA,EAAS,GAYFA,OATPA,EAASL,EAAQM,IAAKC,oEAGWA,EAAOL,uCAAuCK,EAAOJ,yCAC5DI,EAAON,QAAQM,EAAOL,+BACxCM,KAAK,IAEbC,QAAQC,IAAIL,GAELA,EAGV,QAAA,QAAA;;ACuMD,aAlRA,QAAA,oBAQA,IAAA,EAAA,EAAA,QAAA,qBA0QA,SAAA,IAAA,GAAA,mBAAA,QAAA,OAAA,KAAA,IAAA,EAAA,IAAA,QAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,GAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,MAAA,CAAA,QAAA,GAAA,IAAA,EAAA,IAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EArQA,MAAMM,EAAqBC,SAASC,cAAc,eAElD,IAAIR,GAAS,EAAaL,EAAAA,SAAAA,EAAb,SACbW,EAAmBG,mBAAmB,YAAaT","file":"src.7dedd555.js","sourceRoot":"../src","sourcesContent":["export const members = [\n    {\n    name: \"Dmytro\",\n    lastname: \"Samyliak\",\n    photo: \"checked\",\n    },\n    {\n    name: \"Anatol\",\n    lastname: \"Biełow\",\n    photo: \"checked\",\n    },\n    {\n    name: \"Ганна\",\n    lastname: \"Батарчук\",\n    photo: \"checked\",\n    },\n    {\n    name: \"Yulia\",\n    lastname: \"Semenyuk\",\n    photo: \"checked\",\n    },\n    {\n    name: \"Vsevolod\",\n    lastname: \"Antonov\",\n    photo: \"checked\",\n    },\n    {\n    name: \"Galyna\",\n    lastname: \"Maikovych\",\n    photo: \"checked\",\n    },\n    {\n    name: \"Vitalii\",\n    lastname: \"Shulga\",\n    photo: \"checked\",\n    },\n    {\n    name: \"Василий\",\n    lastname: \"Волобаев\",\n    photo: \"checked\",\n    },\n    {\n    name: \"Anastasiia\",\n    lastname: \"Chorna\",\n    photo: \"notchecked\",\n    },\n    {\n    name: \"Dmytro\",\n    lastname: \"Litinskyi\",\n    photo: \"notchecked\",\n    },\n    {\n    name: \"Андрей\",\n    lastname: \"Пенский\",\n    photo: \"notchecked\",\n    },\n];\n\nexport default function renderedTeam(members) {\n\nlet markup = \"\";\n    \n    \n    markup = members.map((member) =>\n         \n    `<li class=\"team--member\">\n      <input type=\"checkbox\" name=\"${member.lastname}\" id=\"samyliak\" value=\"yes\" ${member.photo} />\n      <label for=\"Samyliak\">${member.name} ${member.lastname}</label>\n    </li>`).join(\"\");\n\n    console.log(markup);\n\n    return markup;\n    \n    \n};","import './sass/main.scss';\n// import { Notify } from 'notiflix';\n// const axios = require('axios').default;\n// Описан в документации\n// import SimpleLightbox from 'simplelightbox';\n// Дополнительный импорт стилей\n// import 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport renderedTeam from \"./js/team-create\";\nimport { members } from \"./js/team-create\";\n\n//------------------------------------------------------------------------------------------\n\nconst teamMemberSelector = document.querySelector('.team--list');\n\nlet markup = renderedTeam(members);\nteamMemberSelector.insertAdjacentHTML(\"beforeend\", markup);\n\n\n// -------------------------------------------------------------------------------------------------------\n//let variables\n\n// let searchQueryResult = '';\n// let q = '';\n// let pageN = 1;\n// let gallery = new SimpleLightbox('.gallery a', { /* options */enableKeyboard: true, });\n\n\n// //Objects\n\n// //pixabayObj\n\n// const pixabayAPI = {\n\n//         baseUrl: 'https://pixabay.com/api/',\n//         key: '3705719-850a353db1ffe60c326d386e6',\n//         image_type: \"photo\",\n//         orientation: \"horizontal\",\n//         safesearch: \"true\",\n//         order: \"popular\",\n//         page: '1',\n//         per_page: \"40\",\n\n// };\n    \n// //markup\n\n// const markupData = {\n//     markup: \"\",\n//     htmlCode: \"\",\n// };\n\n// // -------------------------------------------------------------------------------------------------------\n// // searchForm and gallery find in DOM\n\n// const searchForm = document.querySelector('.search-form');\n// const gallerySelector = document.querySelector('.gallery');\n\n// // -------------------------------------------------------------------------------------------------------\n// // event listener search form\n\n// searchForm.addEventListener(\"submit\", async (e) => {\n\n//     e.preventDefault();\n\n//     const { elements: { searchQuery } } = e.target;\n    \n//     searchQueryResult = searchQuery.value;\n\n\n//     // console.log\n//     console.log(\"searchQueryResult:\",`\"${searchQueryResult}\"`);\n//     console.log(\"q:\", `\"${q}\"`);\n    \n//     if (searchQueryResult === '') {\n//         console.log(searchQueryResult);\n//         gallerySelector.innerHTML = \"\";\n//         btnLoadMore.classList.remove(\"is-visible\");\n        \n//         return Notify.failure('Sorry, there are no images matching your search query. Please try again.');\n            \n//     };\n\n//     if (searchQueryResult !== q) {\n\n//         console.log(\"CHANGED!!! NOT EMPTY QUERY\");\n\n//         pageN = 1;\n//         pixabayAPI.page = `${pageN}`;\n\n//         gallerySelector.innerHTML = \"\";\n//         btnLoadMore.classList.remove(\"is-visible\");\n\n//     } else {\n\n//         console.log(\"page+1!!!\");\n\n//         pageN += 1;\n//         pixabayAPI.page = `${pageN}`;\n        \n//         btnLoadMore.classList.remove(\"is-visible\");\n\n//     };\n    \n//     q = searchQueryResult;\n    \n//     try {\n\n//         const results = await fetchPhotos(searchQueryResult);\n//         markupData.htmlCode = await renderedPhotos(results);\n\n//         gallerySelector.insertAdjacentHTML(\"beforeend\", markupData.htmlCode);\n//         btnLoadMore.classList.add(\"is-visible\");\n        \n//         // simpleLightbox gallery destroys and reinitilized\n//         gallery.refresh();\n        \n        \n\n//         const { baseUrl, key, image_type, orientation, safesearch, order, page, per_page } = pixabayAPI;\n//         const { total, totalHits, hits } = results;    \n//         const totalPages = Math.ceil(totalHits / per_page);\n        \n        \n//         if (page >= totalPages) {\n        \n//         btnLoadMore.classList.remove(\"is-visible\");\n\n//         };\n\n//         Notify.success(`'Hooray! We found ${results.totalHits} images.'`);\n\n//         //console.log\n//         console.log(\"results\", results);\n\n//     }\n\n//     catch (error) {\n    \n//         Notify.failure('Sorry, there are no images matching your search query. Please try again.');\n\n//     };\n\n//     // console.log\n//     console.log(\"\");\n// });\n\n// // -------------------------------------------------------------------------------------------------------\n// // button load more\n\n// const btnLoadMore = document.querySelector('.load-more');\n// btnLoadMore.addEventListener(\"click\", async () => {\n\n//         pageN += 1;\n//         pixabayAPI.page = `${pageN}`;\n\n// try {\n\n//         const results = await fetchPhotos(searchQueryResult);\n//         markupData.htmlCode = await renderedPhotos(results);\n        \n//         gallerySelector.insertAdjacentHTML(\"beforeend\", markupData.htmlCode);\n//         btnLoadMore.classList.add(\"is-visible\");\n        \n//         // simpleLightbox gallery destroys and reinitilized\n//         gallery.refresh();\n\n//         const { baseUrl, key, image_type, orientation, safesearch, order, page, per_page } = pixabayAPI;\n//         const { total, totalHits, hits } = results;    \n//         const totalPages = Math.ceil(totalHits / per_page);\n        \n//     if (page >= totalPages) {\n            \n//             btnLoadMore.classList.remove(\"is-visible\");\n//         };\n\n//         console.log(\"results\", results);\n\n//     }\n\n//     catch (error) {\n    \n//         Notify.failure(\"We're sorry, but you've reached the end of search results.\");\n\n//     }\n\n//     console.log(\"btnLoadMore working\");\n//     console.log(\"\");\n// });\n\n// // -------------------------------------------------------------------------------------------------------\n// // fetch photos function\n\n// async function fetchPhotos(searchQueryResult) {\n\n//     const { baseUrl, key, image_type, orientation, safesearch, order, page, per_page } = pixabayAPI;\n\n\n//     pixabayAPI.page = `${pageN}`;\n    \n//     console.log(\"page\", page);\n\n//     // const response = await fetch(`${baseUrl}?key=${key}&q=${q}&image_type=${image_type}&orientation=${orientation}&safesearch=${safesearch}&order=${order}&page=${page}&per_page=${per_page}`);\n//     // const results = await response.json();\n    \n//     const response = await axios.get(`${baseUrl}?key=${key}&q=${q}&image_type=${image_type}&orientation=${orientation}&safesearch=${safesearch}&order=${order}&page=${page}&per_page=${per_page}`);\n//     const results = response.data;\n//     console.log(\"response.data\", response.data);\n    \n\n//     console.log(\"response\", response);\n//     console.log(\"page\", page);\n    \n//     //results destruction\n   \n//     const {total, totalHits, hits} = results;\n//     const totalPages = Math.ceil(totalHits / per_page);\n    \n//     if (total === 0) {\n//     throw new Error();\n//     };\n\n//     //total pages check\n//     if (page >= totalPages) {\n        \n//         btnLoadMore.classList.remove(\"is-visible\");\n//         Notify.failure(\"We're sorry, but you've reached the end of search results.\");\n//         return results;\n\n//     };\n\n//     console.log(\"totalHits\",totalHits);\n//     console.log(\"per_page\", per_page);\n    \n//     console.log(\"totalPages=\", totalPages);\n\n\n//     //received data\n//     return results;\n\n// };\n\n// // -------------------------------------------------------------------------------------------------------\n// // render photos function, make html markup\n\n// async function renderedPhotos(results) {\n\n//     const { hits } = results;\n\n//     markupData.markup = hits.map((hit) =>\n//         `<a href=\"${hit.largeImageURL}\"><div class=\"photo-card\">\n//         <img src=\"${hit.webformatURL}\" alt=\"${hit.tags}\" loading=\"lazy\"\n//           class=\"img-item\" />\n//         <div class=\"info\">\n//     <p class=\"info-item\">\n//       <b>Likes:</b>${hit.likes}\n//     </p>\n//     <p class=\"info-item\">\n//       <b>Views:</b>${hit.views}\n//     </p>\n//     <p class=\"info-item\">\n//       <b>Comments:</b>${hit.comments}\n//     </p>\n//     <p class=\"info-item\">\n//       <b>Downloads:</b>${hit.downloads}\n//     </p>\n//   </div>\n// </div></a>`).join(\"\");\n    \n//     return markupData.markup;\n    \n// };\n\n\n// -------------------------------------------------------------------------------------------------------"]}